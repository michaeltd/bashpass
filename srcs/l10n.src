#!/bin/bash

mylang="${LANG:-en_US_UTF_8}"
export mylang="${mylang//[.-]/_}"

export en_US_UTF_8_bpusage="Usage: ${sbn} [sample.gpg] [zenity|yad|Xdialog|gdialog|cdialog|dialog|terminal] [--debug] [--help]"
export en_US_UTF_8_msg_pm="Password missmatch!"
export -a en_US_UTF_8_tui_ops=( "${red}Create${reset}" "${green}Search${reset}" "${blue}Update${reset}" "${cyan}Delete${reset}" "${yellow}Import CSV${reset}" "${yellow}Export CSV${reset}" "${magenta}SQLite3${reset}" "${white}Help${reset}" "${dim}Quit${reset}" )
export -a en_US_UTF_8_gui_ops=( "Create" "Search" "Update" "Delete" "Import_CSV" "Export_CSV" "SQLite3" "Help" "Quit" )
export -a en_US_UTF_8_sdesc=( "New entry" "Find account" "Regen password" "Remove entry" "Import a file" "Export a file" "Sqlite3 session" "Help screen" "Exit" )
export -a en_US_UTF_8_desc=( "gather details for a new account." "search records by domain. (empty for all)" "regenerate an existing password." "remove an account." "prompt for csv file to import." "prompt for csv file to export." "start an sqlite session against ${bndb}." "show this message" "terminate script." )
export -a en_US_UTF_8_tui_menu=( )
export -a en_US_UTF_8_tui_hmsg=( "\n${bpusage[*]}\n\n" )
export en_US_UTF_8_gui_menu=""
export en_US_UTF_8_kdg_menu=""
export -a en_US_UTF_8_gui_hmsg=( "\n${bpusage[*]}\n\n" )

export_menus(){
    for (( x = 0; x < ${#en_US_UTF_8_tui_ops[@]}; x++ )); do
	en_US_UTF_8_tui_menu+=( "${x}:${tui_ops[x]}" )
	(( ( x + 1 ) % 4 == 0 )) && en_US_UTF_8_tui_menu+=( "\n" ) || en_US_UTF_8_tui_menu+=( "\t" )
	en_US_UTF_8_tui_hmsg+=( "Use ${x}, for ${tui_ops[x]}, which will ${desc[x]}\n" )
	en_US_UTF_8_gui_menu+="${gui_ops[x]}|${sdesc[x]}|${desc[x]}|"
	en_US_UTF_8_kdg_menu+="${x} ${gui_ops[x]} "
	en_US_UTF_8_gui_hmsg+=( "Use ${gui_ops[x]}, to ${desc[x]}\n" )
    done
    
    en_US_UTF_8_tmp_hmsg="\naccounts table format is as follows:\n$("${sql3[@]}" ".schema ${act}")\n\n"

    export en_US_UTF_8_tui_menu+=( "\nChoose[0-$((${#tui_ops[*]}-1))]:" )
    export en_US_UTF_8_tui_hmsg+=( "${tmp_hmsg}" )
    export en_US_UTF_8_gui_menu
    export en_US_UTF_8_gui_hmsg+=( "${tmp_hmsg}" )
    export en_US_UTF_8_kdg_menu
}


declare -ax menu_ops=( "${bt_ops[@]}" "--title" "Selection Menu"  "--item-help" "--cancel-label" "Quit" "--menu" "Menu:" "${geops[@]}" ) \
	csv_ops=( "${bt_ops[@]}" "--title" "Enter a csv file:" "--fselect" "${sdn}/examples/" "${geops[@]}" )

    echo -ne "${bt_ops[@]} --title ${1^} --column-separator , --radiolist SelectID2${1^} ${geops[@]} 5"


    local -arx create_ops=( "${bt_ops[@]}" "--title" "Set details" "--ok-label" "Submit" "--separator" $',' "--form" "Create Form" "${geops[@]}" 0
			     "Domain:" 1 1 "$dm" 1 10 40 0
			     "Email:" 2 1 "$em" 2 10 40 0
			     "User:" 3 1 "$un" 3 10 40 0
			     "Password:" 4 1 "$pw" 4 10 40 0
			     "Pword1:" 5 1 "$pw1" 5 10 40 0 
			     "Comments:" 6 1 "$cm" 6 10 40 0 )

    "${DIALOG}" $(make_box input domain) 2> "${tf}"

    "${DIALOG}" $(make_box input email) 2> "${tf}"

    "${DIALOG}" $(make_box input UserName) 2> "${tf}"

    "${DIALOG}" $(make_box password password) "${pw}" 2> "${tf}"

    "${DIALOG}" $(make_box password password_again) "${pw1}" 2> "${tf}"

    "${DIALOG}" $(make_box input comment) 2> "${tf}"

    "${DIALOG}" $(make_box input Domain) 2> "${tf}"

    "${DIALOG}" $(make_box password password) "${pw}" 2> "${tf}"

    "${DIALOG}" $(make_box password password_again) "${pw1}" 2> "${tf}"

	"${DIALOG}" $(make_box password "${id}PasswordIs:") "${pw}" 2> /dev/null

    "${DIALOG}" $(make_msg "message") "--msgbox" "Account ID: #${id} deleted. No errors reported." "${geops[@]}"

    "${DIALOG}" $(make_msg "Help") "--msgbox" "${gui_hmsg[*]}" "${geops[@]}"

	func_show_msg "Something smells fishy!"

	read -rp "Return to continue ... "

        func_show_msg "You'll need to run ${0/*\/} in a terminal (or tty)!"

        func_show_msg "You'll need bash major version no less than 4."

        func_show_msg "You need SQLite3 installed."

        func_show_msg "You need GNU Privacy Guard v2 (gnupg) installed."


	func_show_msg "You can only have one instance of ${bngpgf}."

        func_show_msg "${bngpgf}, does not appear to be a valid PGP file."

        func_show_msg "${bngpgf} decryption failed."

        func_show_msg "${bndb}, does not appear to be a valid SQLite 3.x database file."


        func_show_msg "Need a working db to function."

            echo -ne "Enter a domain: (Ctrl-D to cancel) "


            echo -ne "Enter an email: (Ctrl-D to cancel) "


            echo -ne "Enter a username: (Ctrl-D to cancel) "


            echo -ne "Enter password: (alpha/numeric/punctuation or length/empty for auto) "


            echo -ne "Enter password again: (Ctrl-D to cancel) "


            echo -ne "Enter comment: (Ctrl-D to cancel) "



    echo -ne "Enter search term to look for: (empty for All) "





    echo -ne "Select ID to update: (empty to cancel) "






    echo -ne "Enter password: (alpha/numeric/punctuation or length/empty for auto.) ( Last: '${pw}' ) "


    echo -ne "Enter password again: ( Last: '${pw1}' )"








    echo -ne "Select ID to delete: (empty to cancel) "







    echo -ne "Enter csv file: (empty to cancel) "













	echo -ne "Select ID to preview password: (empty to cancel) "



	echo "Account: ${id}, Password: ${pw}"





    echo -ne "Account ID: #${id} deleted. No errors reported!\n"











declare -arx menu_ops=( "${gc_ops[@]}" "--list" "--title=Select action" "--no-headers" "--column=Option" "--column=SDesc" "--column=LDesc" ) \
	create_ops=( "${gct_ops[@]}" "--form" "--separator=," "--field=Domain" "--field=Email" "--field=Uname" "--field=Password!Insert pasword or length or empty for auto:H" "--field=Password2!Insert password again.:H" "--field=Comment" ) \
	retrieve_ops=( "${ct_ops[@]}" "--text=Enter search term to look for (empty for All):" "--entry" ) \
	update_ops=( "${gct_ops[@]}" "--text=Select an ID to update:" "--list" "--radiolist" "--column" "Update" "--column" "ID" "--column" "Domain" "--column" "Email" "--column" "UName" ) \
	password_ops=( "${ct_ops[@]}" "--text=Enter password or length/empty for auto:" "--entry" "--hide-text" ) \
	password1_ops=( "${ct_ops[@]}" "--text=Enter password again:" "--entry" "--hide-text" ) \
	delete_ops=( "${gct_ops[@]}" "--text=Select an ID to delete:" "--list" "--radiolist" "--column" "Update" "--column" "ID" "--column" "Domain" "--column" "Email" "--column" "UName" ) \
	csv_ops=( "${center_op}" "--title" "Select a csv file:" "--file" ) \
	results_ops=( "${gct_ops[@]}" "--text-info" ) \
	preview_ops=( "${gct_ops[@]}" "--text=Results. Select account to preview:" "--list" "--column" "ID" "--column" "Domain" "--column" "Email" "--column" "UserName" "--column" "Comments" ) \
	showpw_ops=( "${ct_ops[@]}" "--text=Password selected:" "--entry" ) \
	message_ops=( "${ct_ops[@]}" "--info"  ) \
	usage_ops=( "${gc_ops[@]}" "--info" "--title=Help screen" )


    "${DIALOG}" "${message_ops[@]}" "--text=Account #${id} deleted. No errors reported."


declare -arx menu_ops=( "${gt_ops[@]}" "--list" "--text=Select Action" "--hide-header" "--column=Option" "--column=SDesc" "--column=LDesc" ) \
	create_ops=( "${geometry_ops[@]}" "--forms" "--separator=," "--add-entry=Domain" "--add-entry=Email" "--add-entry=Uname" "--add-password=Password" "--add-password=Password1" "--add-entry=Comment" ) \
	retrieve_ops=( "${title_op}" "--text=Enter search term to look for (empty for All):" "--entry" ) \
	update_ops=( "${gt_ops[@]}" "--text=Select an ID to update:" "--list" "--radiolist" "--column" "Update" "--column" "ID" "--column" "Domain" "--column" "Email" "--column" "UName" ) \
	password_ops=( "--title=${bngpgf}" "--text=Enter password or length/empty for auto: " "--entry" "--hide-text" ) \
	password1_ops=( "--title=${bngpgf}" "--text=Enter a password again: " "--entry" "--hide-text" ) \
	delete_ops=( "${gt_ops[@]}" "--text=Select an ID to delete:" "--list" "--radiolist" "--column" "Update" "--column" "ID" "--column" "Domain" "--column" "Email" "--column" "UName" ) \
	csv_ops=( "${geometry_ops[@]}" "--title=Select a csv file:" "--file-selection" ) \
	results_ops=( "${gt_ops[@]}" "--text-info" "--no-markup" ) \
	preview_ops=( "${gt_ops[@]}" "--text=Results. Select account to preview password:" "--list" "--column=ID" "--column=Domain" "--column=Email" "--column=UName" "--column=Comments" ) \
	showpw_ops=( "${title_op}" "--text=Password selected:" "--entry" ) \
	message_ops=( "${title_op}" "--info" "--no-wrap" ) \
	usage_ops=( "${geometry_ops[@]}" "--info" "--title=Help screen" )


    "${DIALOG}" "${message_ops[@]}" "--text=Account #${id} deleted. No errors reported."


