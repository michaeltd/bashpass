#!/usr/bin/env bash
#
# Just to pickup syntax highlighting
#shellcheck disable=SC2207,SC2154

# Xdialog/dialog
declare -rx XDIALOG_HIGH_DIALOG_COMPAT=0 XDIALOG_FORCE_AUTOSIZE=0 \
	XDIALOG_INFOBOX_TIMEOUT="${XDTO}" XDIALOG_NO_GMSGS=1

declare -rx L="0" C="0"

declare -arx geops=( "${L}" "${C}" )

declare -arx bt_ops=( "--stdout" "--backtitle" "${bngpgf}" )

mklist(){
    echo -ne "${bt_ops[@]} --title ${1^} --column-separator | --radiolist SelectID2${1^} ${geops[@]} 10"
}

mkmsg(){
    echo -ne "${bt_ops[@]} --title ${1^}"
}

mkbox(){
    echo -ne "${bt_ops[@]} --title ${2^} --insecure --${1}box ${2} ${geops[@]}"
}

menu_Xdialog(){
    local -ar menu_ops=( "${bt_ops[@]}" "--title" "Selection Menu"  "--item-help" "--cancel-label" "Quit" "--menu" "Menu:" "${geops[@]}" )
    local IFS=$'\|\t\n'
    usrinpt="$("${DIALOG}" "${menu_ops[@]}" ${#gui_ops[*]} ${gui_menu})" || return $?
    export usrinpt
}

create_Xdialog() {
    local -a vals
    local ttl="${FUNCNAME[@]:(-4):1} form" input

    if [[ -z "${1}" ]]; then # Create mode
	dm="${dm:-"enter a domain"}" em="${em:-"enter an email address"}"
	un="${un:-"enter your username"}" pw="${pw:-"$(func_gpw 16)"}"
	pw1="${pw}" cm="${cm:-"comments goes here..."}"
    else # Update mode
        id="${1}"
	local IFS=$'\|'
	local -a rs=( $("${sql3[@]}" "$(sl3_select_all_id_eq "${id}")") )
	dm="${dm:-"${rs[1]}"}" em="${em:-"${rs[2]}"}"
	un="${un:-"${rs[3]}"}" pw="${pw:-"${rs[4]}"}"
	pw1="${pw:-"${rs[4]}"}" cm="${cm:-"${rs[5]}"}"
    fi

    local IFS=$'\|'

    vals=( $("${DIALOG}" "${bt_ops[@]}" "--title" "${ttl^}" "--separator" "|" \
		      "--3inputsbox" "${ttl^}: Enter required details!\n
Passwords can be alpha-numeric-punctuation characters.\n
You can use a pword of your choice or a desired length (8-64 chars) \n
or leave empty for auto (16 chars).\n
Make sure you're not using any restricted characters as input.\n
Like  : $(func_regex_forbid)\n
Namely: space,backslash,backtick,pound,colon,comma or quotes(both).\n" \
		      ${geops[@]} \
		      "Domain" "${dm}" \
		      "Email" "${em}" \
		      "UName" "${un}" ) ) || return $?

    local IFS=$'\ \t\n'

    dm="${vals[0]:-${dm}}" em="${vals[1]:-${em}}" un="${vals[2]:-${un}}"

    input="$("${DIALOG}" $(mkbox "password" "password") "${pw}" 2>&1 )" || return $?
    pw="${input:-${pw}}"

    input="$("${DIALOG}" $(mkbox "password" "password_again!") "${pw1}" 2>&1 )" || return $?
    pw1="${input:-${pw1}}"

    input="$("${DIALOG}" $(mkbox "input" "any_comments?") "${cm}" 2>&1 )" || return $?
    cm="${input:-${cm}}"

    export dm em un pw pw1 cm
}

retrieve_Xdialog(){
    criteria="$("${DIALOG}" $(mkbox "input" "Criteria,empty-for-all"))" || return $?
    export criteria
}

update_Xdialog(){
    id="$("${DIALOG}" $(mklist "${FUNCNAME[@]:(-4):1}") $(func_brl))" || return $?
    export id
}

delete_Xdialog(){
    update_Xdialog
}

csv_Xdialog(){
    local -ar csv_ops=( "${bt_ops[@]}" "--title" "Enter a csv file to ${FUNCNAME[1]:0:6}:" "--fselect" "${sdn}/examples/" "${geops[@]}" )
    csvf="$("${DIALOG}" "${csv_ops[@]}")"
    export csvf
}

importcsv_Xdialog(){
    csv_Xdialog
}

exportcsv_Xdialog(){
    csv_Xdialog
}

results_Xdialog(){
    local id pw errlvl
    while :; do
	id="$("${DIALOG}" $(mklist "${FUNCNAME[@]:(-4):1}") $(func_brl "${1}"))" || return $?
	[[ -z "${id}" ]] && return 1
	pw="$("${sql3[@]}" "$(sl3_showpw "${id}")")"
	"${DIALOG}" $(mkbox password "#${id}'s_Password_Is:") "${pw}" 2> /dev/null || return $?
	[[ -n "$(type -P xclip)" ]] && echo "${pw}" | "xclip" "-r"
    done
}

message_Xdialog(){
    "${DIALOG}" $(mkmsg "message") "--msgbox" "Account ID: #${id} deleted. No errors reported." "${geops[@]}"
}

usage_Xdialog(){
    "${DIALOG}" $(mkmsg "Help") "--left" "--msgbox" "${gui_hmsg[*]}" "${geops[@]}"
}

