#!/bin/bash
#
# Just to pickup syntax highlighting
#shellcheck disable=SC2207,SC2154

declare -rx L="0" C="0"

declare -arx geops=( "${L}" "${C}" )

declare -arx bt_ops=( "--backtitle" "${bngpgf}" )

declare -ax menu_ops=( "${bt_ops[@]}" "--title" "Selection Menu"  "--item-help" "--cancel-label" "Quit" "--menu" "Menu:" "${geops[@]}" ) \
	csv_ops=( "${bt_ops[@]}" "--title" "Enter a csv file:" "--fselect" "${sdn}/examples/" "${geops[@]}" )

make_rlist(){
    echo -ne "${bt_ops[@]} --title ${1^} --column-separator , --radiolist SelectID2${1^} ${geops[@]} 5"
}

make_msg(){
    echo -ne "${bt_ops[@]} --title ${1^}"
}

make_box(){
    echo -ne "${bt_ops[@]} --default-button OK --title ${2^} --${1}box ${2} ${geops[@]}"
}

bashpass_dialog(){
    local IFS=$'\|\t\n'
    "${DIALOG}" "${menu_ops[@]}" ${#gui_ops[*]} ${gui_menu} 2> "${tf}"
}

bashpass_cdialog(){
    bashpass_dialog
}

bashpass_Xdialog(){
    bashpass_dialog
}

bashpass_gdialog(){
    bashpass_Xdialog
}

create_dialog() {
    local dm em un pw="$(func_gpw 16)" cm errlvl cnt=0 
    local pw1="${pw}"
    local -arx create_ops=( "${bt_ops[@]}" "--title" "Set details" "--ok-label" "Submit" "--separator" $',' "--form" "Create Form" "${geops[@]}" 0
			     "Domain:" 1 1 "$dm" 1 10 40 0
			     "Email:" 2 1 "$em" 2 10 40 0
			     "User:" 3 1 "$un" 3 10 40 0
			     "Password:" 4 1 "$pw" 4 10 40 0
			     "Pword1:" 5 1 "$pw1" 5 10 40 0 
			     "Comments:" 6 1 "$cm" 6 10 40 0 )
    # Store data to $VALUES variable
    "${DIALOG}" "${create_ops[@]}" 2> "${tf}"
    errlvl=$?
    (( errlvl != DIALOG_OK )) && return $errlvl
    local -r vals="$(cat "${tf}")"
    local IFS=$','
    for i in $vals; do
	arv[((cnt++))]="$i"
    done
    echo -ne "dm=\"${arv[0]:-NULL}\"\nem=\"${arv[1]:-NULL}\"\nun=\"${arv[2]:-NULL}\"\npw=\"${arv[3]}\"\npw1=\"${arv[4]}\"\ncm=\"${arv[5]:-NULL}\"\n" > "${tf}"
}

create_cdialog(){
    create_dialog
}

create_Xdialog() {
    # --2inputsbox <text> <height> <width> <label1> <init1> <label2> <init2>
    # --3inputsbox <text> <height> <width> <label1> <init1> <label2> <init2> <label3> <init3>
    local dm em un pw="$(func_gpw 16)" cm
    local pw1="${pw}"

    "${DIALOG}" $(make_box input domain) 2> "${tf}"
    (( $? == DIALOG_OK )) && dm=$(cat "${tf}") || return $?
    "${DIALOG}" $(make_box input email) 2> "${tf}"
    (( $? == DIALOG_OK )) && em=$(cat "${tf}") || return $?
    "${DIALOG}" $(make_box input UserName) 2> "${tf}"
    (( $? == DIALOG_OK )) && un=$(cat "${tf}") || return $?
    "${DIALOG}" $(make_box password password) "${pw}" 2> "${tf}"
    (( $? == DIALOG_OK )) && pw=$(cat "${tf}") || return $?
    "${DIALOG}" $(make_box password password_again) "${pw1}" 2> "${tf}"
    (( $? == DIALOG_OK )) && pw1=$(cat "${tf}") || return $?
    "${DIALOG}" $(make_box input comment) 2> "${tf}"
    (( $? == DIALOG_OK )) && cm=$(cat "${tf}") || return $?

    echo -ne "dm=\"${dm}\"\nem=\"${em}\"\nun=\"${un}\"\npw=\"${pw}\"\npw1=\"${pw1}\"\ncm=\"${cm}\"\n" > "${tf}"
}

create_gdialog(){
    create_Xdialog
}

retrieve_dialog(){
    local dm errlvl
    "${DIALOG}" $(make_box input Domain) 2> "${tf}"
    errlvl=$? dm="$(cat "${tf}")"
    if (( errlvl != DIALOG_OK )); then
	return "${errlvl}"
    fi
    echo -ne "dm=\"${dm}\"" > "${tf}"
}

retrieve_cdialog(){
    retrieve_dialog
}

retrieve_Xdialog(){
    retrieve_dialog
}

retrieve_gdialog(){
    retrieve_Xdialog
}

update_dialog(){
    local id errlvl pw pw1
    "${DIALOG}" $(make_rlist "${FUNCNAME[@]:(-3)}") $(func_brl) 2> "${tf}"
    errlvl=$? id="$(cat "${tf}")"
    if (( errlvl != DIALOG_OK )) || [[ -z "${id}" ]]; then
	return 1
    fi

    pw="$("${sql3[@]}" "$(sl3_showpw "${id}")")"
    pw1="${pw}"

    "${DIALOG}" $(make_box password password) "${pw}" 2> "${tf}"
    errlvl=$? pw="$(cat "${tf}")"
    if (( errlvl != DIALOG_OK )); then
	return "${errlvl}"
    fi

    "${DIALOG}" $(make_box password password_again) "${pw1}" 2> "${tf}"
    errlvl=$? pw1="$(cat "${tf}")"
    if (( errlvl != DIALOG_OK )); then
	return "${errlvl}"
    fi

    echo -ne "id=\"${id}\"\npw=\"${pw}\"\npw1=\"${pw1}\"" > "${tf}"
}

update_cdialog(){
    update_dialog
}

update_Xdialog(){
    update_dialog
}

update_gdialog(){
    update_Xdialog
}

delete_dialog(){
    local id errlvl
    "${DIALOG}" $(make_rlist "${FUNCNAME[@]:(-3)}") $(func_brl) 2> "${tf}"
    errlvl=$? id="$(cat "${tf}")"
    if (( errlvl != DIALOG_OK )) || [[ -z "${id}" ]]; then
	return 1
    fi
    echo -ne "id=\"${id}\"" > "${tf}"
}

delete_cdialog(){
    delete_dialog
}

delete_Xdialog(){
    delete_dialog
}

delete_gdialog(){
    delete_Xdialog
}

importcsv_dialog(){
    local errlvl csvf
    "${DIALOG}" "${csv_ops[@]}" 2> "${tf}"
    errlvl=$?
    (( errlvl != DIALOG_OK )) && return $errlvl
    csvf="$(cat "${tf}")"
    [[ -z "${csvf}" ]] && return 1
    echo -ne "csvf=\"${csvf}\"\n" > "${tf}"
}

importcsv_cdialog(){
    importcsv_dialog
}

importcsv_Xdialog(){
    importcsv_dialog
}

importcsv_gdialog(){
    importcsv_Xdialog
}

exportcsv_dialog(){
    importcsv_dialog
}

exportcsv_cdialog(){
    exportcsv_dialog
}

exportcsv_Xdialog(){
    exportcsv_dialog
}

exportcsv_gdialog(){
    exportcsv_Xdialog
}

results_dialog(){
    local errlvl id=0 pw pw1
    while [[ -n "${id}" ]]; do
	"${DIALOG}" $(make_rlist "${FUNCNAME[@]:(-3)}") $(func_brl "${1}") 2> "${tf}"
	errlvl=$? id="$(cat "${tf}")"
	if (( errlvl != DIALOG_OK )) || [[ -z "${id}" ]]; then
	    return 1
	fi
	pw="$("${sql3[@]}" "$(sl3_showpw "${id}")")"
	"${DIALOG}" $(make_box password "${id}PasswordIs:") "${pw}" 2> /dev/null || return $?
	[[ -n "$(type -P xclip)" ]] && echo "${pw}" | "xclip" "-r"
    done
}

results_cdialog(){
    results_dialog "${1}"
}

results_Xdialog(){
    results_dialog "${1}"
}

results_gdialog(){
    results_Xdialog "${1}"
}

message_dialog(){
    "${DIALOG}" $(make_msg "message") "--msgbox" "Account ID: #${id} deleted. No errors reported." "${geops[@]}"
}

message_cdialog(){
    message_dialog
}

message_Xdialog(){
    message_dialog
}

message_gdialog(){
    message_Xdialog
}

usage_dialog(){
    "${DIALOG}" $(make_msg "Help") "--msgbox" "${gui_hmsg[*]}" "${geops[@]}"
}

usage_cdialog(){
    usage_dialog
}

usage_Xdialog(){
    "${DIALOG}" $(make_msg "Help") "--left" "--msgbox" "${gui_hmsg[*]}" "${geops[@]}"
}

usage_gdialog(){
    usage_Xdialog
}
