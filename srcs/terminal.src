#!/bin/bash
#
# Just to pickup syntax highlighting
#shellcheck disable=SC2034,SC2155,SC2034,SC2155,SC2154

# Font attributes, Colors, bg_colors
declare -r reset="$(tput sgr0)" bold="$(tput bold)" \
	dim="$(tput dim)" blink="$(tput blink)" \
	underline="$(tput smul)" end_underline="$(tput rmul)" \
	reverse="$(tput rev)" hidden="$(tput invis)"

declare -r black="$(tput setaf 0)" red="$(tput setaf 1)" \
	green="$(tput setaf 2)" yellow="$(tput setaf 3)" \
	blue="$(tput setaf 4)" magenta="$(tput setaf 5)" \
	cyan="$(tput setaf 6)" white="$(tput setaf 7)" \
	default="$(tput setaf 9)"

declare -r bg_black="$(tput setab 0)" bg_red="$(tput setab 1)" \
	bg_green="$(tput setab 2)" bg_yellow="$(tput setab 3)" \
	bg_blue="$(tput setab 4)" bg_magenta="$(tput setab 5)" \
	bg_cyan="$(tput setab 6)" bg_white="$(tput setab 7)" \
	bg_default="$(tput setab 9)"

bashpass_terminal(){
    echo -ne " ${tui_menu[*]}"
    read -r usrinpt
    errlvl=$?
    echo "${usrinpt}" > "${tf}"
    return $errlvl
}

create_terminal() {
    local fnc="${FUNCNAME[@]:(-3):1}: (Ctrl-D to cancel):" input
    
    if [[ -z "${1}" ]]; then # Create mode
	local dm="${dm:-"enter a domain"}" em="${em:-"enter an email address"}"
	local un="${un:-"enter your username"}" pw="${pw:-"$(func_gpw 16)"}"
	local pw1="${pw}" cm="${cm:-"comments goes here..."}"
    else # Update mode
        local id="${1}" IFS=$'\|'
	local -a rs=( $("${sql3[@]}" "$(sl3_select_all_id_eq "${id}")") )
	local dm="${dm:-"${rs[1]}"}" em="${em:-"${rs[2]}"}"
	local un="${un:-"${rs[3]}"}" pw="${pw:-"${rs[4]}"}"
	local pw1="${pw:-"${rs[4]}"}" cm="${cm:-"${rs[5]}"}"
    fi

    echo -ne "${fnc^} default: ${dm}: "
    read -r input || return $?
    dm="${input:-${dm}}"

    echo -ne "${fnc^} default: ${em}: "
    read -r input || return $?
    em="${input:-${em}}"

    echo -ne "${fnc^} default: ${un}: "
    read -r input || return $?
    un="${input:-${un}}"

    echo -ne "${fnc^} default: ${pw}: (alpha/numeric/punctuation or length/empty for auto): "
    read -r input || return $?
    pw="${input:-${pw}}"

    echo -ne "${fnc^} default: ${pw1}: (again): "
    read -r input || return $?
    pw1="${input:-${pw1}}"

    echo -ne "${fnc^} default: ${cm}: "
    read -r input || return $?
    cm="${input:-${cm}}"

    echo -ne "export dm=\"${dm:-NULL}\" em=\"${em:-NULL}\" un=\"${un:-NULL}\" pw=\"${pw}\" pw1=\"${pw1}\" cm=\"${cm:-NULL}\"\n" > "${tf}"
}

retrieve_terminal(){
    local dm
    echo -ne "Enter search term to look for: (empty for All) "
    read -r dm || return $?
    echo -ne "dm=\"${dm}\"" > "${tf}"
}

update_terminal(){
    local id pw pw1
    "${ccm[@]}" "$(sl3_select_preview)"
    echo -ne "Select ID to update: (empty to cancel) "
    read -r id || return $?
    [[ -z "${id}" ]] && return 1
    echo -ne "id=\"${id}\"\n" > "${tf}"
}

delete_terminal(){
    local id
    "${ccm[@]}" "$(sl3_select_preview)"
    echo -ne "Select ID to delete: (empty to cancel) "
    read -r id || return $?
    [[ -z "${id}" ]] && return 1
    echo -ne "id=\"${id}\"" > "${tf}"
}

importcsv_terminal(){
    local csvf
    echo -ne "Enter csv file: (empty to cancel) "
    read -r csvf || return $?
    [[ -z "${csvf}" ]] && return 1
    echo -ne "csvf=\"${csvf}\"" > "${tf}"
}

exportcsv_terminal(){
    importcsv_terminal
}

results_terminal(){
    local id=0 pw
    while [[ -n "${id}" ]]; do
	"${ccm[@]}" "${1}"
	echo -ne "Select ID to preview password: (empty to cancel) "
	read -r id || return $?
	[[ -z "${id}" ]] && return 1
	pw="$("${sql3[@]}" "$(sl3_showpw "${id}")")"
	echo "Account: ${id}, Password: ${pw}"
	[[ -n "$(type -P xclip)" ]] && echo "${pw}" | "xclip" "-r"
    done
}

message_terminal(){
    echo -ne "Account ID: #${id} deleted. No errors reported!\n"
}

usage_terminal(){
    echo -ne "${tui_hmsg[*]}"
}
