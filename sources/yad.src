#!/bin/bash
#
# Just to pickup syntax highlighting
#shellcheck disable=SC2207,SC2154

declare -rx H=$(( $(xwininfo -root | awk '$1=="Height:" {print $2}') / 2 )) W=$(( $(xwininfo -root | awk '$1=="Width:" {print $2}') / 2 ))

bashpass_yad(){
    OFS=$IFS IFS=$'\|'
    "${DIALOG}" "--height=$H" "--width=$W" "--center" "--list" \
		"--title=Select action" "--no-headers" \
		"--column=Option" "--column=SDesc" \
		"--column=LDesc" ${gui_menu} > "${tf}"
    errlvl=$?
    IFS="${OFS}"
    return $errlvl
}

create_yad() {
    local errlvl cnt=0
    "${DIALOG}" "--height=$H" "--width=$W" "--center" "--form" "--separator=," \
		"--field=Domain" "--field=Email" "--field=Uname" \
 		"--field=Password" "--field=Comment" > "${tf}"
    errlvl=$?
    (( errlvl != DIALOG_OK )) && return $errlvl
    local -r vals="$(cat "${tf}")"
    OFS=$IFS IFS=,
    for i in $vals; do
	arv[((cnt++))]="$i"
    done
    IFS=$OFS
    echo -ne "dm=\"${arv[0]}\"\nem=\"${arv[1]}\"\nun=\"${arv[2]}\"\npw=\"${arv[3]}\"\ncm=\"${arv[4]}\"\n" > "${tf}"
}

retrieve_yad() {
    local dm errlvl
    "${DIALOG}" "--center" "--title=${bngpgf}" "--text=Enter domain to look for (empty for All):" "--entry" > "${tf}"
    errlvl=$? dm="$(cat "${tf}")"
    (( errlvl != DIALOG_OK )) && return "${errlvl}"
    echo -ne "dm=\"${dm}\"" > "${tf}"
}

update_yad() {
    local id errlvl pw
    "${DIALOG}" "--height=$H" "--width=$W" "--title=${bngpgf}" "--text=Select an ID to update:" "--list" "--radiolist" "--column" "Update" "--column" "ID" "--column" "Domain" "--column" "Email" "--column" "UName" $(brlyad) > "${tf}"
    errlvl=$? id="$(cat "${tf}")"
    if (( errlvl != DIALOG_OK )) || [[ -z "${id}" ]]; then
	return 1
    fi

    "${DIALOG}" --height=$H --width=$W --title="${bngpgf}" --text="Enter a password or a password length (8-64) or empty for auto (max length): " --entry-text="" --entry > "${tf}"
    errlvl=$? pw="$(cat "${tf}")"
    if (( errlvl != DIALOG_OK )); then
	return "${errlvl}"
    fi

    echo -ne "id=\"${id}\"\npw=\"${pw}\"" > "${tf}"
}

delete_yad() {
    local id errlvl
    "${DIALOG}" "--height=$H" "--width=$W" "--title=${bngpgf}" "--text=Select an ID to delete:" "--list" "--radiolist" "--column" "Update" "--column" "ID" "--column" "Domain" "--column" "Email" "--column" "UName" $(brlyad) > "${tf}"
    errlvl=$? id="$(cat "${tf}")"
    if (( errlvl != DIALOG_OK )) || [[ -z "${id}" ]]; then
	return 1
    fi
    echo -ne "id=\"${id}\"" > "${tf}"
}

importcsv_yad() {
    local errlvl csvf
    "${DIALOG}" "--width=$W" "--height=$H" "--text-info" "--center" "--title" "Select a csv file:" "--text" "\nPress [Ok] to continue, or [Cancel] to return to menu\n" "--button=gtk-ok" "--button=gtk-cancel" "--editable" "--wrap" "--filename=ProcessList" > "${tf}"
    errlvl=$?
    (( errlvl != DIALOG_OK )) && return $errlvl
    csvf="$(cat "${tf}")"
    [[ -z "${csvf}" ]] && return 1
    echo -ne "csvf=\"${csvf}\"\n" > "${tf}"
}

exportcsv_yad() {
    importcsv_yad
}

results_yad(){
    [[ -n "$(type -P xclip)" ]] && echo "${pw}" | "xclip" "-r"
    "${DIALOG}" "--height=$H" "--width=$W" "--center" "--text-info" "--title=${bngpgf}" "--filename=${tf}"
}

message_yad(){
    "${DIALOG}" "--center" "--info" "--title=${bngpgf}" "--text=Account #${id} deleted successfully.\nNo errors reported."
}

usage_yad() {
    "${DIALOG}" "--height=$H" "--width=$W" "--center" "--info" "--title=Help screen" "--text=${gui_hmsg[*]}"
}
