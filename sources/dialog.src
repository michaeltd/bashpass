#!/bin/bash
#
# Just to pickup syntax highlighting
#shellcheck disable=SC2207,SC2154

create_dialog() {
    local dm em un pw cm

    exec 3>&1
    # Store data to $VALUES variable
    local -a vals=($("${DIALOG}" --ok-label "Submit" \
				--backtitle "${bngpgf}" \
				--title "Set details" \
				--form "Create Form" \
				15 50 0 \
				"Domain:"   1 1	"$dm" 	1 10 40 0 \
				"Email:"    2 1	"$em"  	2 10 40 0 \
				"User:"     3 1	"$un"  	3 10 40 0 \
				"Passwd:"   4 1	"$pw" 	4 10 40 0 \
				"Comments:" 5 1	"$cm" 	5 10 40 0 \
				2>&1 1>&3))
    # close fd
    exec 3>&-

    echo -ne "dm=\"${vals[*]:0:1}\"\nem=\"${vals[*]:1:1}\"\nun=\"${vals[*]:2:1}\"\npw=\"${vals[*]:3:1}\"\ncm=\"${vals[*]:4}\"\n" > "${tf}"
}

create_Xdialog() {
    # --2inputsbox <text> <height> <width> <label1> <init1> <label2> <init2>
    # --3inputsbox <text> <height> <width> <label1> <init1> <label2> <init2> <label3> <init3> 
    local dm em un pw cm
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "domain" "--inputbox" "Enter a domain:" "${L}" "${C}" 2> "${tf}"
    (( $? == DIALOG_OK )) && dm=$(cat "${tf}") || return $?
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "email" "--inputbox" "Enter an email:" "${L}" "${C}" 2> "${tf}"
    (( $? == DIALOG_OK )) && em=$(cat "${tf}") || return $?
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "username" "--inputbox" "Enter a username:" "${L}" "${C}" 2> "${tf}"
    (( $? == DIALOG_OK )) && un=$(cat "${tf}") || return $?
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "password" "--passwordbox" "Enter a password: (alpha, numeric and punctuation characters ok. No single/double-quotes, pipes or commas!)" "${L}" "${C}" 2> "${tf}"
    (( $? == DIALOG_OK )) && pw=$(cat "${tf}") || return $?
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "comment" "--inputbox" "Enter comments:" "${L}" "${C}" 2> "${tf}"
    (( $? == DIALOG_OK )) && cm=$(cat "${tf}") || return $?

    echo -ne "dm=\"${dm}\"\nem=\"${em}\"\nun=\"${un}\"\npw=\"${pw}\"\ncm=\"${cm}\"\n" > "${tf}"
}

retrieve_dialog(){
    local dm errlvl
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "domain" "--inputbox" "Enter domain to look for (empty for All): " "${L}" "${C}" 2> "${tf}"
    errlvl=$? dm="$(cat "${tf}")"
    if (( errlvl != DIALOG_OK )); then
	return "${errlvl}"
    fi
    echo -ne "dm=\"${dm}\"" > "${tf}"
}

retrieve_Xdialog(){
    retrieve_dialog
}

update_dialog(){
    local id errlvl pw
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "update accout:" "--radiolist" "Select an id to update: " "${L}" "${C}" 5 $(brl) 2> "${tf}"
    errlvl=$? id="$(cat "${tf}")"

    if (( errlvl != DIALOG_OK )) || [[ -z "${id}" ]]; then
	return 1
    fi
    
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "password" "--inputbox" "Enter a password or a password length (8-64) or empty for auto (max length): " "${L}" "${C}" 2> "${tf}"
    errlvl=$? pw="$(cat "${tf}")"
    if (( errlvl != DIALOG_OK )); then
	return "${errlvl}"
    fi

    echo -ne "id=\"${id}\"\npw=\"${pw}\"" > "${tf}"
}

update_Xdialog(){
    update_dialog
}

delete_dialog(){
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "delete account:" "--radiolist" "Select an id to delete: " "${L}" "${C}" 5 $(brl) 2> "${tf}"
    errlvl=$? id="$(cat "${tf}")"
    if (( errlvl != DIALOG_OK )) || [[ -z "${id}" ]]; then
	return 1
    fi
    echo -ne "id=\"${id}\"" > "${tf}"
}

delete_Xdialog(){
    delete_dialog
}

results_dialog(){
    [[ -n "$(type -P xclip)" ]] && echo "${pw}" | "xclip" "-r"
    "${PAGER}" "${tf}"
}

results_Xdialog(){
    [[ -n "$(type -P xclip)" ]] && echo "${pw}" | "xclip" "-r"
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "results" "--editbox" "${tf}" "${L}" "${C}" 2> /dev/null
}

message_dialog(){
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "dialog" "--msgbox" "Account ID: #${id} deleted." "${L}" "${C}"
}

message_Xdialog(){
    message_dialog
}

usage_dialog(){
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "Help" "--msgbox" "${gui_hmsg[*]}" "0" "0"
}

usage_Xdialog(){
    "${DIALOG}" "--backtitle" "${bngpgf}" "--title" "Help" "--left" "--msgbox" "${gui_hmsg[*]}" "0" "0"
}
