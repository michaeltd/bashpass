#!/bin/bash
#
# Just to pickup syntax highlighting
#shellcheck disable=SC2034,SC2155,SC2034,SC2155,SC2154

# Font attributes, Colors, bg_colors
declare -r reset="$(tput sgr0)" bold="$(tput bold)" \
	dim="$(tput dim)" blink="$(tput blink)" \
	underline="$(tput smul)" end_underline="$(tput rmul)" \
	reverse="$(tput rev)" hidden="$(tput invis)"

declare -r black="$(tput setaf 0)" red="$(tput setaf 1)" \
	green="$(tput setaf 2)" yellow="$(tput setaf 3)" \
	blue="$(tput setaf 4)" magenta="$(tput setaf 5)" \
	cyan="$(tput setaf 6)" white="$(tput setaf 7)" \
	default="$(tput setaf 9)"

declare -r bg_black="$(tput setab 0)" bg_red="$(tput setab 1)" \
	bg_green="$(tput setab 2)" bg_yellow="$(tput setab 3)" \
	bg_blue="$(tput setab 4)" bg_magenta="$(tput setab 5)" \
	bg_cyan="$(tput setab 6)" bg_white="$(tput setab 7)" \
	bg_default="$(tput setab 9)"

bashpass_terminal(){
    echo -ne " ${tui_menu[*]}"
    read -r usrinpt
    errlvl=$?
    echo "${usrinpt}" > "${tf}"
    return $errlvl
}

create_terminal() {
    local dm em un pw cm
    while [[ -z "${dm}" || -z "${em}" || -z "${un}" || -z "${pw}" || -z "${cm}" ]]; do
        if [[ -z "${dm}" ]]; then
            echo -ne "Enter a domain: (Ctrl-D to cancel) "
            read -r dm || return $?
        elif [[ -z "${em}" ]]; then
            echo -ne "Enter an email: (Ctrl-D to cancel) "
            read -r em || return $?
        elif [[ -z "${un}" ]]; then
            echo -ne "Enter a username: (Ctrl-D to cancel) "
            read -r un || return $?
        elif [[ -z "${pw}" ]]; then
            echo -ne "Enter a password: (alpha, numeric and punctuation characters ok. No quotes, pipes or commas! Ctrl-D to cancel) "
            read -r pw || return $?
        elif [[ -z "${cm}" ]]; then
            echo -ne "Enter comment: (Ctrl-D to cancel) "
            read -r cm || return $?
        fi
    done

    echo -ne "dm=\"${dm}\"\nem=\"${em}\"\nun=\"${un}\"\npw=\"${pw}\"\ncm=\"${cm}\"\n" > "${tf}"
}

retrieve_terminal(){
    local dm
    echo -ne "Enter domain to look for (empty for All): "
    read -r dm || return $?
    echo -ne "dm=\"${dm}\"" > "${tf}"
}

update_terminal(){
    local id pw
    echo -ne "Select an id to update (empty to cancel): "
    read -r id || return $?
    [[ -z "${id}" ]] && return 1

    echo -ne "Enter a password or password length (8-64) or empty for auto: "
    read -r pw || return $?

    echo -ne "id=\"${id}\"\npw=\"${pw}\"" > "${tf}"
}

delete_terminal(){
    local id
    echo -ne "Select an id to delete (empty to cancel): "
    read -r id || return $?
    [[ -z "${id}" ]] && return 1
    echo -ne "id=\"${id}\"" > "${tf}"
}

importcsv_terminal(){
    local csvf
    echo -ne "Enter a csv file (empty to cancel): "
    read -r csvf || return $?
    [[ -z "${csvf}" ]] && return 1
    echo -ne "csvf=\"${csvf}\"" > "${tf}"
}

exportcsv_terminal(){
    importcsv_terminal
}

results_terminal(){
    "${PAGER}" "${tf}"
}

message_terminal(){
    echo -ne "Account ID: #${id} deleted.\nNo errors reported!\n"
}

usage_terminal(){
    echo -ne "${tui_hmsg[*]}"
}
