#!/bin/sh
#
# bashpass/install - Install bashpass

Err(){ printf "ERROR: %s\n" "$1" 1>&2; exit 1; }
Dep(){ command -v "$1" 1> /dev/null 2>&1 || Err "Executable '$1' not found."; }

Dep gpg2 || Err "Command 'gpg2' not found."
Dep sqlite3 || Err "Command 'sqlite3' not found."
[ -t 1 ] || Err 'An interactive session is required.'

SDN=${0%/*}

if [ -z ${1} ]; then
    PGPF='sample.pgp'
    DB=${PGPF%%.pgp}
elif [[ ${1} == *.pgp ]]; then
    PGPF=${1}
    DB=${PGPF%%.pgp}
else
    PGPF="${1}.pgp"
    DB=${PGPF%%.pgp}
fi

FPDB="${SDN}/${DB}"
FPPGPF="${SDN}/${PGPF}"

printf "\
This script will:
 1. Make '${DB}' SQLite3 file ...
 2. Encrypt it to: ${PGPF}
 3. Execute: bashpass ${PGPF}
"

printf 'Continue? [Y/n]: '
read Answer

case ${Answer:-y} in
    [Yy]|[Yy][Ee][Ss]) printf 'Beginning installation...\n' ;;
        [Nn]|[Nn][Oo]) exit 1 ;;
                    *) Err 'Invalid response -- quitting.' ;;
esac

sqlite3 "${FPDB}" < ac.sql || Err "Command 'sqlite3' exited unexpectedly."

gpg2 --default-recipient-self -o "${FPPGPF}" -e "${FPDB}" ||
    Err "Command 'gpg2' exited unexpectedly."

"${SDN}/bashpass" "${PGPF}" || Err "Command 'bashpass' exited unexpectedly."

printf 'From now on, you can use: bashpass %s\n' "${PGPF}"
